# -*- coding: utf-8 -*-
"""color detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1omVHiLwQCIX5-uZv-BOfrTOwXjLONwGr
"""

# Commented out IPython magic to ensure Python compatibility.
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
import numpy as np
import cv2
from collections import Counter
from skimage.color import rgb2lab, deltaE_cie76
import os
# %matplotlib inline

image = cv2.imread('image.jpg')
print("The type of this input is {}".format(type(image)))
print("Shape: {}".format(image.shape))
#plt.imshow(image)

## Output
# The type of this input is <class 'numpy.ndarray'>
# Shape: (3456, 4608, 3)

image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
#plt.imshow(image)

gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
#plt.imshow(gray_image, cmap='gray')

def RGB2HEX(color):
    return "#{:02x}{:02x}{:02x}".format(int(color[0]), int(color[1]), int(color[2]))

def get_image(image_path):
    image = cv2.imread(image_path)
    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    return image

modified_image = cv2.resize(image, (600, 400), interpolation = cv2.INTER_AREA)
modified_image = modified_image.reshape(modified_image.shape[0]*modified_image.shape[1], 3)

colorList={};
def set_colors():
  colorList["AliceBlue"]: (0xF0, 0xF8, 0xFF)
  colorList["AntiqueWhite"] : (0xFA, 0xEB, 0xD7)
  colorList["Aqua"] : (0x00, 0xFF, 0xFF)
  colorList["Aquamarine"] : (0x7F, 0xFF, 0xD4)
  colorList["Azure"] : (0xF0, 0xFF, 0xFF)
  colorList["Beige"] : (0xF5, 0xF5, 0xDC)
  colorList["Bisque"] : (0xFF, 0xE4, 0xC4)
  colorList["Black"] : (0x00, 0x00, 0x00)
  colorList["BlanchedAlmond"] : (0xFF, 0xEB, 0xCD)
  colorList["Blue"] : (0x00, 0x00, 0xFF)
  colorList["BlueViolet"] : (0x8A, 0x2B, 0xE2)
  colorList["Brown"] : (0xA5, 0x2A, 0x2A)
  colorList["BurlyWood"] : (0xDE, 0xB8, 0x87)
  colorList["CadetBlue"] : (0x5F, 0x9E, 0xA0)
  colorList["Chartreuse"] : (0x7F, 0xFF, 0x00)
  colorList["Chocolate"] : (0xD2, 0x69, 0x1E)
  colorList["Coral"] : (0xFF, 0x7F, 0x50)
  colorList["CornflowerBlue"] : (0x64, 0x95, 0xED)
  colorList["Cornsilk"] : (0xFF, 0xF8, 0xDC)
  colorList["Crimson"] : (0xDC, 0x14, 0x3C)
  colorList["Cyan"] : (0x00, 0xFF, 0xFF)
  colorList["DarkBlue"] : (0x00, 0x00, 0x8B)
  colorList["DarkCyan"] : (0x00, 0x8B, 0x8B)
  colorList["DarkGoldenRod"] : (0xB8, 0x86, 0x0B)
  colorList["DarkGray"] : (0xA9, 0xA9, 0xA9)
  colorList["DarkGreen"] : (0x00, 0x64, 0x00)
  colorList["DarkKhaki"] : (0xBD, 0xB7, 0x6B)
  colorList["DarkMagenta"] : (0x8B, 0x00, 0x8B)
  colorList["DarkOliveGreen"] : (0x55, 0x6B, 0x2F)
  colorList["DarkOrange"] : (0xFF, 0x8C, 0x00)
  colorList["DarkOrchid"] : (0x99, 0x32, 0xCC)
  colorList["DarkRed"] : (0x8B, 0x00, 0x00)
  colorList["DarkSalmon"] : (0xE9, 0x96, 0x7A)
  colorList["DarkSeaGreen"] : (0x8F, 0xBC, 0x8F)
  colorList["DarkSlateBlue"] : (0x48, 0x3D, 0x8B)
  colorList["DarkSlateGray"] : (0x2F, 0x4F, 0x4F)
  colorList["DarkTurquoise"] : (0x00, 0xCE, 0xD1)
  colorList["DarkViolet"] : (0x94, 0x00, 0xD3)
  colorList["DeepPink"] : (0xFF, 0x14, 0x93)
  colorList["DeepSkyBlue"] : (0x00, 0xBF, 0xFF)
  colorList["DimGray"] : (0x69, 0x69, 0x69)
  colorList["DodgerBlue"] : (0x1E, 0x90, 0xFF)
  colorList["FireBrick"] : (0xB2, 0x22, 0x22)
  colorList["FloralWhite"] : (0xFF, 0xFA, 0xF0)
  colorList["ForestGreen"] : (0x22, 0x8B, 0x22)
  colorList["Fuchsia"] : (0xFF, 0x00, 0xFF)
  colorList["Gainsboro"] : (0xDC, 0xDC, 0xDC)
  colorList["GhostWhite"] : (0xF8, 0xF8, 0xFF)
  colorList["Gold"] : (0xFF, 0xD7, 0x00)
  colorList["GoldenRod"] : (0xDA, 0xA5, 0x20)
  colorList["Gray"] : (0x80, 0x80, 0x80)
  colorList["Green"] : (0x00, 0x80, 0x00)
  colorList["GreenYellow"] : (0xAD, 0xFF, 0x2F)
  colorList["HoneyDew"] : (0xF0, 0xFF, 0xF0)
  colorList["HotPink"] : (0xFF, 0x69, 0xB4)
  colorList["IndianRed"] : (0xCD, 0x5C, 0x5C)
  colorList["Indigo"] : (0x4B, 0x00, 0x82)
  colorList["Ivory"] : (0xFF, 0xFF, 0xF0)
  colorList["Khaki"] : (0xF0, 0xE6, 0x8C)
  colorList["Lavender"] : (0xE6, 0xE6, 0xFA)
  colorList["LavenderBlush"] : (0xFF, 0xF0, 0xF5)
  colorList["LawnGreen"] : (0x7C, 0xFC, 0x00)
  colorList["LemonChiffon"] : (0xFF, 0xFA, 0xCD)
  colorList["LightBlue"] : (0xAD, 0xD8, 0xE6)
  colorList["LightCoral"] : (0xF0, 0x80, 0x80)
  colorList["LightCyan"] : (0xE0, 0xFF, 0xFF)
  colorList["LightGoldenRodYellow"] : (0xFA, 0xFA, 0xD2)
  colorList["LightGray"] : (0xD3, 0xD3, 0xD3)
  colorList["LightGreen"] : (0x90, 0xEE, 0x90)
  colorList["LightPink"] : (0xFF, 0xB6, 0xC1)
  colorList["LightSalmon"] : (0xFF, 0xA0, 0x7A)
  colorList["LightSeaGreen"] : (0x20, 0xB2, 0xAA)
  colorList["LightSkyBlue"] : (0x87, 0xCE, 0xFA)
  colorList["LightSlateGray"] : (0x77, 0x88, 0x99)
  colorList["LightSteelBlue"] : (0xB0, 0xC4, 0xDE)
  colorList["LightYellow"] : (0xFF, 0xFF, 0xE0)
  colorList["Lime"] : (0x00, 0xFF, 0x00)
  colorList["LimeGreen"] : (0x32, 0xCD, 0x32)
  colorList["Linen"] : (0xFA, 0xF0, 0xE6)
  colorList["Magenta"] : (0xFF, 0x00, 0xFF)
  colorList["Maroon"] : (0x80, 0x00, 0x00)
  colorList["MediumAquaMarine"] : (0x66, 0xCD, 0xAA)
  colorList["MediumBlue"] : (0x00, 0x00, 0xCD)
  colorList["MediumOrchid"] : (0xBA, 0x55, 0xD3)
  colorList["MediumPurple"] : (0x93, 0x70, 0xDB)
  colorList["MediumSeaGreen"] : (0x3C, 0xB3, 0x71)
  colorList["MediumSlateBlue"] : (0x7B, 0x68, 0xEE)
  colorList["MediumSpringGreen"] : (0x00, 0xFA, 0x9A)
  colorList["MediumTurquoise"] : (0x48, 0xD1, 0xCC)
  colorList["MediumVioletRed"] : (0xC7, 0x15, 0x85)
  colorList["MidnightBlue"] : (0x19, 0x19, 0x70)
  colorList["MintCream"] : (0xF5, 0xFF, 0xFA)
  colorList["MistyRose"] : (0xFF, 0xE4, 0xE1)
  colorList["Moccasin"] : (0xFF, 0xE4, 0xB5)
  colorList["NavajoWhite"] : (0xFF, 0xDE, 0xAD)
  colorList["Navy"] : (0x00, 0x00, 0x80)
  colorList["OldLace"] : (0xFD, 0xF5, 0xE6)
  colorList["Olive"] : (0x80, 0x80, 0x00)
  colorList["OliveDrab"] : (0x6B, 0x8E, 0x23)
  colorList["Orange"] : (0xFF, 0xA5, 0x00)
  colorList["OrangeRed"] : (0xFF, 0x45, 0x00)
  colorList["Orchid"] : (0xDA, 0x70, 0xD6)
  colorList["PaleGoldenRod"] : (0xEE, 0xE8, 0xAA)
  colorList["PaleGreen"] : (0x98, 0xFB, 0x98)
  colorList["PaleTurquoise"] : (0xAF, 0xEE, 0xEE)
  colorList["PaleVioletRed"] : (0xDB, 0x70, 0x93)
  colorList["PapayaWhip"] : (0xFF, 0xEF, 0xD5)
  colorList["PeachPuff"] : (0xFF, 0xDA, 0xB9)
  colorList["Peru"] : (0xCD, 0x85, 0x3F)
  colorList["Pink"] : (0xFF, 0xC0, 0xCB)
  colorList["Plum"] : (0xDD, 0xA0, 0xDD)
  colorList["PowderBlue"] : (0xB0, 0xE0, 0xE6)
  colorList["Purple"] : (0x80, 0x00, 0x80)
  colorList["Red"] : (0xFF, 0x00, 0x00)
  colorList["RosyBrown"] : (0xBC, 0x8F, 0x8F)
  colorList["RoyalBlue"] : (0x41, 0x69, 0xE1)
  colorList["SaddleBrown"] : (0x8B, 0x45, 0x13)
  colorList["Salmon"] : (0xFA, 0x80, 0x72)
  colorList["SandyBrown"] : (0xF4, 0xA4, 0x60)
  colorList["SeaGreen"] : (0x2E, 0x8B, 0x57)
  colorList["SeaShell"] : (0xFF, 0xF5, 0xEE)
  colorList["Sienna"] : (0xA0, 0x52, 0x2D)
  colorList["Silver"] : (0xC0, 0xC0, 0xC0)
  colorList["SkyBlue"] : (0x87, 0xCE, 0xEB)
  colorList["SlateBlue"] : (0x6A, 0x5A, 0xCD)
  colorList["SlateGray"] : (0x70, 0x80, 0x90)
  colorList["Snow"] : (0xFF, 0xFA, 0xFA)
  colorList["SpringGreen"] : (0x00, 0xFF, 0x7F)
  colorList["SteelBlue"] : (0x46, 0x82, 0xB4)
  colorList["Tan"] : (0xD2, 0xB4, 0x8C)
  colorList["Teal"] : (0x00, 0x80, 0x80)
  colorList["Thistle"] : (0xD8, 0xBF, 0xD8)
  colorList["Tomato"] : (0xFF, 0x63, 0x47)
  colorList["Turquoise"] : (0x40, 0xE0, 0xD0)
  colorList["Violet"] : (0xEE, 0x82, 0xEE)
  colorList["Wheat"] : (0xF5, 0xDE, 0xB3)
  colorList["White"] : (0xFF, 0xFF, 0xFF)
  colorList["WhiteSmoke"] : (0xF5, 0xF5, 0xF5)
  colorList["Yellow"] : (0xFF, 0xFF, 0x00)
  colorList["YellowGreen"] : (0x9A, 0xCD, 0x32)

set_colors()

def get_colors(image, number_of_colors, show_chart):
  clf = KMeans(n_clusters = number_of_colors)
  labels = clf.fit_predict(modified_image)
  
  counts = Counter(labels)

  center_colors = clf.cluster_centers_
  # We get ordered colors by iterating through the keys
  ordered_colors = [center_colors[i] for i in counts.keys()]
  hex_colors = [RGB2HEX(ordered_colors[i]) for i in counts.keys()]
  rgb_colors = [ordered_colors[i] for i in counts.keys()]

  if (show_chart):
      plt.figure(figsize = (8, 6))
      plt.pie(counts.values(), labels = hex_colors, colors = hex_colors)
  
  return rgb_colors

get_colors(get_image('image.jpg'), 8, False)